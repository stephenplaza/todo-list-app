{
  // Vim Extension Configuration
  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.leader": "<space>",
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false,
    "<C-h>": false,
    "<C-j>": false,
    "<C-k>": false,
    "<C-l>": false
  },
  
  // Vim Key Bindings
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "j"],
      "after": ["<Esc>"]
    },
    {
      "before": ["<C-c>"],
      "after": ["<Esc>"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "w"],
      "commands": ["workbench.action.files.save"]
    },
    {
      "before": ["<leader>", "q"],
      "commands": ["workbench.action.closeActiveEditor"]
    },
    {
      "before": ["<leader>", "e"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<leader>", "f"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["<leader>", "p"],
      "commands": ["workbench.action.showCommands"]
    },
    {
      "before": ["<leader>", "g"],
      "commands": ["workbench.view.scm"]
    },
    {
      "before": ["<leader>", "t"],
      "commands": ["workbench.action.terminal.toggleTerminal"]
    },
    {
      "before": ["<leader>", "r"],
      "commands": ["workbench.action.reloadWindow"]
    },
    {
      "before": ["<leader>", "n"],
      "commands": ["workbench.action.files.newUntitledFile"]
    },
    {
      "before": ["<leader>", "s"],
      "commands": ["workbench.action.gotoSymbol"]
    },
    {
      "before": ["g", "d"],
      "commands": ["editor.action.revealDefinition"]
    },
    {
      "before": ["g", "r"],
      "commands": ["editor.action.goToReferences"]
    },
    {
      "before": ["<leader>", "d"],
      "commands": ["editor.action.showHover"]
    }
  ],
  "vim.visualModeKeyBindings": [
    {
      "before": ["<leader>", "c"],
      "commands": ["editor.action.commentLine"]
    }
  ],
  
  // Window and split navigation (Vim-like)
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<C-h>"],
      "commands": ["workbench.action.focusLeftGroup"]
    },
    {
      "before": ["<C-j>"],
      "commands": ["workbench.action.focusBelowGroup"]
    },
    {
      "before": ["<C-k>"],
      "commands": ["workbench.action.focusAboveGroup"]
    },
    {
      "before": ["<C-l>"],
      "commands": ["workbench.action.focusRightGroup"]
    }
  ],
  
  // Editor and formatting settings
  "editor.lineNumbers": "relative",
  "editor.cursorSurroundingLines": 8,
  "editor.scrollBeyondLastLine": false,
  "workbench.colorTheme": "Default Dark+",
  "editor.fontSize": 14,
  "editor.fontFamily": "'Fira Code', 'Monaco', 'Menlo', monospace",
  "editor.fontLigatures": true,
  
  // Project-specific JavaScript settings
  "javascript.preferences.includePackageJsonAutoImports": "auto",
  "javascript.suggest.autoImports": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "javascript.format.insertSpaceAfterConstructor": true,
  "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
  "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
  "javascript.format.insertSpaceAfterSemicolonInForStatements": true,
  "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
  "javascript.format.insertSpaceAfterCommaDelimiter": true,
  
  // Auto-save and formatting
  "files.autoSave": "onFocusChange",
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true
  },
  
  // Emmet configuration
  "emmet.includeLanguages": {
    "javascript": "javascriptreact"
  },
  "emmet.triggerExpansionOnTab": true,
  
  // File explorer
  "explorer.openEditors.visible": 0,
  "explorer.decorations.badges": true,
  "explorer.decorations.colors": true,
  
  // Integrated terminal
  "terminal.integrated.shell.osx": "/bin/zsh",
  "terminal.integrated.fontSize": 13,
  "terminal.integrated.cursorStyle": "block",
  
  // Git integration
  "git.enableSmartCommit": true,
  "git.autofetch": true,
  "git.decorations.enabled": true,
  
  // Bracket pair colorization
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",
  
  // IntelliSense and suggestions
  "editor.quickSuggestions": {
    "other": true,
    "comments": false,
    "strings": true
  },
  "editor.parameterHints.enabled": true,
  "editor.suggestOnTriggerCharacters": true,
  
  // Live Server configuration
  "liveServer.settings.donotVerifyTags": true,
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.port": 8080,
  "liveServer.settings.root": "/",
  
  // Error lens for better error visualization
  "errorLens.enabledDiagnosticLevels": ["error", "warning"],
  "errorLens.fontSize": "12",
  
  // Todo tree configuration
  "todo-tree.regex.regex": "((//|#|<!--|;|/\\*|^)\\s*($TAGS)|^\\s*- \\[ \\])",
  "todo-tree.general.tags": [
    "BUG",
    "HACK",
    "FIXME",
    "TODO",
    "XXX",
    "[ ]",
    "[x]"
  ],
  "todo-tree.highlights.defaultHighlight": {
    "icon": "alert",
    "type": "tag",
    "foreground": "red",
    "background": "white",
    "opacity": 50,
    "iconColour": "blue"
  },
  
  // Files to exclude from search and explorer
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/*.code-search": true,
    "**/script.js.backup": true
  },
  "files.exclude": {
    "**/.git": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true,
    "**/*.pyc": true,
    "**/__pycache__": true
  }
}